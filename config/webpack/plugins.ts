// Webpack third party plugins
import HtmlWebPackPlugin from "html-webpack-plugin";
import CopyWebPackPlugin from "copy-webpack-plugin";

// minification
import TerserPlugin from "terser-webpack-plugin";

import { BundleAnalyzerPlugin } from "webpack-bundle-analyzer";
import WebpackBar from "webpackbar";

// Webpack first party plugins
import { Plugin, ContextReplacementPlugin, WatchIgnorePlugin } from "webpack";

// Utils

/** Handles the templating of index.html */
let htmlWebPackPlugin: HtmlWebPackPlugin = new HtmlWebPackPlugin({
    template: "./config/templates/index.html",
    filename: "./index.html",
});

let copyImages = new CopyWebPackPlugin([
    { from: "./resources/images/", to: "./resources/images/" },

    // move favicon to root dir so that it gets picked up by Edge.
    // { from: "./resources/images/favicon.ico", to: "." },
]);

// Moves the Express server alongside the bundled project.
let copyServer = new CopyWebPackPlugin([
    { from: "./config/server/express.js/", to: "../express.js" },
    { from: "./config/server/pm2.js", to: "../ecosystem.config.js" },
]);

// Minify prod code
let uglify = new TerserPlugin({
    include: new RegExp("/build"),
});

let bundleAnalyzer = new BundleAnalyzerPlugin();

// Removes non-EN/US locales.
let ignoreMomentLocales = new ContextReplacementPlugin(/moment[/\\]locale$/, /en/);

// Currently ignores all typings being autogenerated for less modules.
let ignoreTypings = new WatchIgnorePlugin([/less\.d\.ts$/]);

// // Defines a build version.
// let version = new DefinePlugin({
//     BUILD_DATE: JSON.stringify(createBuildTimestamp("DD-MMMM HH:mm", "Europe/Oslo")),
// });

// Custom bundling stats.
let progressReport = new WebpackBar({
    name: "bearcave",
    color: "#007079",
    profile: true,

    /* defaults to true based on environment
     fancy: true,
     basic: true
    */
});

// Export all plugins which are used in all environments.
export const defineBasePlugins = (): Plugin[] => {
    return [htmlWebPackPlugin, copyImages, ignoreTypings, ignoreMomentLocales, progressReport];
};
/**
 * Export individual plugins.
 */
export { htmlWebPackPlugin };
export { copyImages };
export { uglify };
export { bundleAnalyzer };
export { ignoreTypings };
export { copyServer };
// export { version };
