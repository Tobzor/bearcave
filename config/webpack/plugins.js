// Webpack third party plugins
const { WatchIgnorePlugin } = require("webpack");
const { CleanWebpackPlugin } = require("clean-webpack-plugin");
const HtmlWebpackPlugin = require("html-webpack-plugin");
const CopyWebpackPlugin = require("copy-webpack-plugin");
const { BundleAnalyzerPlugin } = require("webpack-bundle-analyzer");

const MiniCssExtractPlugin = require("mini-css-extract-plugin");

const WebpackBar = require("webpackbar");
const { rootPath, join } = require("./root");

// Utils
/** Handles the templating of index.html */
const htmlWebPackPlugin = new HtmlWebpackPlugin({
    template: "./config/templates/index.html",
    filename: "./index.html",
});

const copyWebpackPlugin = new CopyWebpackPlugin({
    patterns: [
        {
            from: join(rootPath, "/resources/favicon_io"),
            to: join(rootPath, "/build"),
        },
    ],
});

const cleanBuildPlugin = new CleanWebpackPlugin();

// extracts modules into css files instead of injecting as style
const miniCssExtractPlugin = new MiniCssExtractPlugin();

const bundleAnalyzer = new BundleAnalyzerPlugin();

// Currently ignores all typings being autogenerated for css modules.
const ignoreTypings = new WatchIgnorePlugin({ paths: [/css\.d\.ts$/] });

// Custom bundling stats.
const progressReport = new WebpackBar({
    name: "bearcave",
    color: "#007079",
    profile: true,
});

// Export all plugins which are used in all environments.
module.exports = {
    htmlWebPackPlugin,
    copyWebpackPlugin,
    ignoreTypings,
    miniCssExtractPlugin,
    bundleAnalyzer,
    defineBasePlugins: function () {
        return [
            cleanBuildPlugin,
            copyWebpackPlugin,
            htmlWebPackPlugin,
            progressReport,
        ];
    },
};
